<div class="start-session-container">
  <script type="text/javascript">
    function form_handler() {
      let data = {
        preset_id: "",
        fields: [],
        presets: <%= Jason.encode!(@presets) |> raw() %>,
        addNewField() {
          this.fields.push({
            regimen_id: '',
            categories: []
          });
        },
        removeField(index) {
          if (this.fields.length > 1) {
            this.fields.splice(index, 1);
          }
        },
        setPreset(preset_id, $refresh) {
          console.log(preset_id);
          if (preset_id == "(none)") {
            this.fields = [];
            this.addNewField();
          } else {
            let preset = this.presets[preset_id];
            this.fields = [];
            if ($refresh) {
              // The multiselect component's categories will not be updated unless we do this.
              $refresh();
            }
            for (i = 0; i < preset.regimens.length; i++) {
              this.fields[i] = { regimen_id: preset.regimens[i].regimenId, categories: preset.regimens[i].categories || [] };
            }
            console.log(this.fields);
          }
          this.preset_id = preset_id
        }
      }
      let preset_id = <%= "\"#{@current_preset_id}\"" |> raw() %>;
      data.setPreset(preset_id, null);
      return data;
    }

    function multiselectComponent(id, index, categories) {
      let data = {
        listActive: false,
        selectedString: '',
        selected: [],
        id: id,
        formIndex: index,
        unselected: <%= Jason.encode!(@image_categories) |> raw() %>,
        addMe(e) {
          const index = e.target.dataset.index;
          const extracted = this.unselected.splice(index, 1);
          this.selected.push(extracted[0]);
        },
        removeMe(e) {
          const index = e.target.dataset.index;
          const extracted = this.selected.splice(index, 1);
          this.unselected.push(extracted[0]);
        }
      };

      let parsed = JSON.parse(categories);
      console.log(parsed);
      for (i = 0; i < parsed.length; i++) {
        const index = data.unselected.indexOf(parsed[i]);
        const extracted = data.unselected.splice(index, 1);
        data.selected.push(extracted[0]);
      }

      return data
    }
  </script>

  <div class="info-container">
    <section class="regimens" x-data="form_handler()">
      <%= form_tag Routes.activity_path(@conn, :create) do %>
      <select id="preset_id" name="preset_id" x-model="preset_id" x-on:change="setPreset(preset_id, $refresh)">
        <%= for {id, preset} <- @presets do %>
            <option value="<%= id %>"><%= preset["humanName"]%></option>
            <% end %>
      </select>
      <template x-for="(field, index) in fields" :key="index">
        <div class="regimen-container">
          <div class="regimen-form" :data-index="index" :data-categories="JSON.stringify(field.categories)">
            <label for="msa-input">Exercise:</label>
            <select id="regimen_id" x-bind:name="'regimen_id[' + index + ']'" x-model="field.regimen_id">
              <%= for {id, regimen} <- @regimens do %>
                  <option value="<%= id %>"><%= regimen["humanName"]%></option>
                  <% end %>
            </select>
            <br>
            <label for="msa-input">Image categories:</label>
            <%= render NiacademyWeb.ComponentView, "multi_select.html", conn: @conn, data: "multiselectComponent('categories', $el.parentElement.dataset.index, $el.parentElement.dataset.categories)", label: "Select..." %>
            <br>
          </div>
        <button class="delete-button" x-on:click="removeField(index)" type="button">-</button>
        </div>
      </template>
      <input type="hidden" name="count" x-bind:value="fields.length">
      <input type="checkbox" name="show_controls" value="true" checked="true">Show Controls</input>
      <br>
      <div class="button-container">
        <button class="submit-button" type="submit" class="full-width">Start</button>
        <button class="add-button" type="button" x-on:click="addNewField()">+</button>
      </div>
      <% end %>
    </section>
  </div>

  <br>
  <h2>Change Current Preset (Tutorial)</h2>
  <div class="info-container">
    <section class="regimens">
      <%= form_tag Routes.activity_path(@conn, :set_preset_position) do %>
      <select id="preset_position" name="preset_position">
        <%= for {preset, position} <- Enum.with_index(@preset_order_tutorial) do %>
            <option value="<%= position %>"
                    <%= if position == @current_preset_pos do %>
                      selected="selected"
                    <% end %>>
              <%= preset["humanName"]%>
            </option>
            <% end %>
      </select>
      <br>
      <input type="hidden" name="type" value="tutorial">
      <div class="button-container">
        <button class="submit-button" type="submit" class="full-width">Change</button>
      </div>
      <% end %>
    </section>
  </div>

  <br>
  <h2>Change Current Preset (Free)</h2>
  <div class="info-container">
    <section class="regimens">
      <%= form_tag Routes.activity_path(@conn, :set_preset_position) do %>
      <select id="preset_position" name="preset_position">
        <%= for {preset, position} <- Enum.with_index(@preset_order_free) do %>
            <option value="<%= position %>"
                    <%= if position == @current_preset_pos do %>
                      selected="selected"
                    <% end %>>
              <%= preset["humanName"]%>
            </option>
            <% end %>
      </select>
      <br>
      <input type="hidden" name="type" value="free">
      <div class="button-container">
        <button class="submit-button" type="submit" class="full-width">Change</button>
      </div>
      <% end %>
    </section>
  </div>
</div>
